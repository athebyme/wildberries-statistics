version: '3.8'
services:
  # База данных для первого приложения
  db-first:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_FIRST_USER}
      POSTGRES_PASSWORD: ${DB_FIRST_PASSWORD}
      POSTGRES_DB: ${DB_FIRST_NAME}
    volumes:
      - postgres-first:/var/lib/postgresql/data
    ports:
      - "${DB_FIRST_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_FIRST_USER} -d ${DB_FIRST_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.db-first

  # Первое приложение с индивидуальными переменными окружения
  wb-monitoring-first:
    build: .
    restart: always
    depends_on:
      db-first:
        condition: service_healthy
    env_file:
      - .env.app-first
    environment:
      - PG_CONN_STRING=postgresql://${DB_FIRST_USER}:${DB_FIRST_PASSWORD}@db-first:5432/${DB_FIRST_NAME}?sslmode=disable
    networks:
      - default
      - web

  # База данных для второго приложения
  db-second:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_SECOND_USER}
      POSTGRES_PASSWORD: ${DB_SECOND_PASSWORD}
      POSTGRES_DB: ${DB_SECOND_NAME}
    volumes:
      - postgres-second:/var/lib/postgresql/data
    ports:
      - "${DB_SECOND_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_SECOND_USER} -d ${DB_SECOND_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.db-second

  # Второе приложение со своими переменными окружения
  wb-monitoring-second:
    build: .
    restart: always
    depends_on:
      db-second:
        condition: service_healthy
    env_file:
      - .env.app-second
    environment:
      - PG_CONN_STRING=postgresql://${DB_SECOND_USER}:${DB_SECOND_PASSWORD}@db-second:5432/${DB_SECOND_NAME}?sslmode=disable
    networks:
      - default
      - web

  # Auth Service (Keycloak)
  auth-service:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://auth-db:5432/keycloak
      - KC_DB_USERNAME=${AUTH_DB_USER}
      - KC_DB_PASSWORD=${AUTH_DB_PASSWORD}
    ports:
      - "8080:8080"
    command: ["start-dev"]
    depends_on:
      auth-db:
        condition: service_healthy
    env_file:
      - .env.auth

  # Database for Auth Service
  auth-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: keycloak
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "${AUTH_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.auth-db

volumes:
  postgres-first:
  postgres-second:
  auth-db-data:
networks:
  default:
    driver: bridge
  web:
    external: true